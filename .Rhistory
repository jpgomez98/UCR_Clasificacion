ucr$cientifico_mep <- factor(ucr$cientifico_mep)
ucr$humanista_mep <- factor(ucr$humanista_mep)
ucr$humanista_mep <- factor(ucr$humanista_mep)
ucr$indigena_mep <- factor(ucr$indigena_mep)
ucr$territorio_indig_mep <- factor(ucr$territorio_indig_mep)
ucr$lengua_indig_mep <- factor(ucr$lengua_indig_mep)
ucr$bilingue_mep <- factor(ucr$bilingue_mep)
ucr$bach_internacional_mep <- factor(ucr$bach_internacional_mep)
ucr$colegio <- factor(ucr$colegio)
ucr$provincia <- factor(ucr$provincia)
ucr$canton <- factor(ucr$canton)
ucr$distrito <- factor(ucr$distrito)
ucr$tipo_colegio <- factor(ucr$tipo_colegio)
ucr$tipo_horario <- factor(ucr$tipo_horario)
ucr$tipo_modalidad <- factor(ucr$tipo_modalidad)
ucr$codigo_zona_procedencia <- factor(ucr$codigo_zona_procedencia)
ucr$rama_mep <- factor(ucr$rama_mep)
ucr$rama1_mep <- factor(ucr$rama1_mep)
ucr$innovacion_mep <- factor(ucr$innovacion_mep)
ucr$v_agregado_mep <- factor(ucr$v_agregado_mep)
ucr$ambiental_mep <- factor(ucr$ambiental_mep)
ucr$o_tecnolog_mep <- factor(ucr$o_tecnolog_mep)
ucr$modeloiiicicloydiversificado_mep <- factor(ucr$modeloiiicicloydiversificado_mep)
ucr$deportivo_mep <- factor(ucr$deportivo_mep)
ucr$telesecundaria_mep <- factor(ucr$telesecundaria_mep)
ucr$liceo_rural_mep <- factor(ucr$liceo_rural_mep)
ucr$cientifico_mep <- factor(ucr$cientifico_mep)
ucr$humanista_mep <- factor(ucr$humanista_mep)
ucr$indigena_mep <- factor(ucr$indigena_mep)
ucr$territorio_indig_mep <- factor(ucr$territorio_indig_mep)
ucr$lengua_indig_mep <- factor(ucr$lengua_indig_mep)
ucr$bilingue_mep <- factor(ucr$bilingue_mep)
ucr$bach_internacional_mep <- factor(ucr$bach_internacional_mep)
ucr$admitido <- factor(ucr$admitido)
str(ucr)
levels(ucr$admitido) <- c("no admitido","admitido")
ucr$admitido
ucr$admitido
str(ucr)
save(ucr,file = "ucr.Rdata")
suppressMessages(library(rpart))
suppressMessages(library(rattle))
suppressMessages(library(DT))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
RNGkind(sample.kind = "Rounding")
set.seed(10)
n=nrow(base2)
s=sample(1:n,round(0.8*n))
RNGkind(sample.kind = "Rounding")
set.seed(10)
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=base2[s,]
test=base2[-s,]
suppressMessages(library(rpart))
suppressMessages(library(rattle))
suppressMessages(library(DT))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
RNGkind(sample.kind = "Rounding")
set.seed(10)
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
mod1 = rpart(admitido ~ ., method="class", data=train)
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
mod1
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
suppressMessages(library(rpart))
suppressMessages(library(rattle))
suppressMessages(library(DT))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
RNGkind(sample.kind = "Rounding")
set.seed(10)
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
mod1 = rpart(admitido ~ ., method="class", data=train)
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
pred1=predict(mod1,newdata = test, type = "class")
table(test$admitido,pred1)
mod2=multinom(admitido~., train)
library(nnet)
mod2=multinom(admitido~., train)
mod2$convergence
mod2$convergence # converge
probs <- predict(mod2,test,type = "probs")
pred2 <- predict(mod2,test)
table(probs,pred2)
table(test$admitido,pred2)
table(test$admitido,pred1)
table(test$admitido,pred2)
probs
mod3 <- step(mod2)
table(test$admitido,predict(mod3,test))
table(ucr$colegio)
table(ucr$admitido,ucr$colegio)
table(ucr$admitido,ucr$provincia)
table(ucr$admitido,ucr$canton)
ucr
ucr <- ucr[,-1]
ucr
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
mod1 = rpart(admitido ~ ., method="class", data=train)
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
pred1=predict(mod1,newdata = test, type = "class")
table(test$admitido,pred1)
suppressMessages(library(rpart))
suppressMessages(library(rattle))
suppressMessages(library(DT))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
RNGkind(sample.kind = "Rounding")
set.seed(10)
ucr <- ucr[,-1]
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
mod1 = rpart(admitido ~ ., method="class", data=train)
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
pred1=predict(mod1,newdata = test, type = "class")
table(test$admitido,pred1)
library(nnet)
mod2=multinom(admitido~., train)
mod2$convergence # converge
probs <- predict(mod2,test,type = "probs")
pred2 <- predict(mod2,test)
table(test$admitido,pred2)
mod3 <- step(mod2)
table(test$admitido,predict(mod3,test))
table(ucr$admitido,ucr$canton)
str(ucr)
library(readxl)
library(tidyverse)
base <- read_excel("BASE DE TRABAJO PARA MULTIVARIADO 9-05-2022.xlsx")
head(base)
# aqui desagrego la base de datos
base1 <- base %>% untable(num = base$realizan_paa)
base1 <- data.frame(base1)
# creo las variables 1 y 0 para las personas respectivamente
a <- base$realizan_paa # los que realizan la prueba
b <- base$admitidos # los admitidos
v <- c()
f <- list()
for (j in 1:853) {
x <- b[j]
v <- c()
for (i in 1:a[j]) {
# print(x)
v[i] <- ifelse(x>0,1,0)
x <- x-1
}
# print(v)
f[[j]] <- v
}
admitidos <- unlist(f)
# verifico la dimension de las variables con las de la base
length(admitidos)
nrow(base1)
# write.csv(admitidos,file = "respuesta.csv",row.names = F)
# aÃ±adimos la variable respuesta bien definida
base1$admitido = admitidos
names(base1)
ucr <- base1[,c(1:26,34)]
ucr <- ucr[,-5]
str(ucr)
ucr$colegio <- factor(ucr$colegio)
ucr$provincia <- factor(ucr$provincia)
ucr$canton <- factor(ucr$canton)
ucr$distrito <- factor(ucr$distrito)
ucr$tipo_colegio <- factor(ucr$tipo_colegio)
ucr$tipo_horario <- factor(ucr$tipo_horario)
ucr$tipo_modalidad <- factor(ucr$tipo_modalidad)
ucr$codigo_zona_procedencia <- factor(ucr$codigo_zona_procedencia)
ucr$rama_mep <- factor(ucr$rama_mep)
ucr$rama1_mep <- factor(ucr$rama1_mep)
ucr$innovacion_mep <- factor(ucr$innovacion_mep)
ucr$v_agregado_mep <- factor(ucr$v_agregado_mep)
ucr$ambiental_mep <- factor(ucr$ambiental_mep)
ucr$o_tecnolog_mep <- factor(ucr$o_tecnolog_mep)
ucr$modeloiiicicloydiversificado_mep <- factor(ucr$modeloiiicicloydiversificado_mep)
ucr$deportivo_mep <- factor(ucr$deportivo_mep)
ucr$telesecundaria_mep <- factor(ucr$telesecundaria_mep)
ucr$liceo_rural_mep <- factor(ucr$liceo_rural_mep)
ucr$cientifico_mep <- factor(ucr$cientifico_mep)
ucr$humanista_mep <- factor(ucr$humanista_mep)
ucr$indigena_mep <- factor(ucr$indigena_mep)
ucr$territorio_indig_mep <- factor(ucr$territorio_indig_mep)
ucr$lengua_indig_mep <- factor(ucr$lengua_indig_mep)
ucr$bilingue_mep <- factor(ucr$bilingue_mep)
ucr$bach_internacional_mep <- factor(ucr$bach_internacional_mep)
ucr$admitido <- factor(ucr$admitido)
levels(ucr$admitido) <- c("no admitido","admitido")
save(ucr,file = "ucr.Rdata")
suppressMessages(library(rpart))
suppressMessages(library(rattle))
suppressMessages(library(DT))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
RNGkind(sample.kind = "Rounding")
set.seed(10)
ucr <- ucr[,-1]
str(ucr)
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
mod1 = rpart(admitido ~ ., method="class", data=train)
fancyRpartPlot(mod1 , palettes=c("Greens", "Reds"))
pred1=predict(mod1,newdata = test, type = "class")
table(test$admitido,pred1)
library(nnet)
mod2=multinom(admitido~., train)
mod2$convergence # converge
probs <- predict(mod2,test,type = "probs")
pred2 <- predict(mod2,test)
table(test$admitido,pred2)
mod3 <- step(mod2)
table(test$admitido,predict(mod3,test))
table(ucr$admitido,ucr$canton)
table(ucr$admitido)
26271+6316
ucr <- read.csv("ucr.csv")
str(ucr)
# ucr$colegio <- factor(ucr$colegio)
# ucr$provincia <- factor(ucr$provincia)
# ucr$canton <- factor(ucr$canton)
# ucr$distrito <- factor(ucr$distrito)
# ucr$tipo_colegio <- factor(ucr$tipo_colegio)
# ucr$tipo_horario <- factor(ucr$tipo_horario)
# ucr$tipo_modalidad <- factor(ucr$tipo_modalidad)
# ucr$codigo_zona_procedencia <- factor(ucr$codigo_zona_procedencia)
# ucr$rama_mep <- factor(ucr$rama_mep)
# ucr$rama1_mep <- factor(ucr$rama1_mep)
# ucr$in0vacion_mep <- factor(ucr$in0vacion_mep)
# ucr$v_agregado_mep <- factor(ucr$v_agregado_mep)
# ucr$ambiental_mep <- factor(ucr$ambiental_mep)
# ucr$o_tecnolog_mep <- factor(ucr$o_tecnolog_mep)
# ucr$modeloiiicicloydiversificado_mep <- factor(ucr$modeloiiicicloydiversificado_mep)
# ucr$deportivo_mep <- factor(ucr$deportivo_mep)
# ucr$telesecundaria_mep <- factor(ucr$telesecundaria_mep)
# ucr$liceo_rural_mep <- factor(ucr$liceo_rural_mep)
# ucr$cientifico_mep <- factor(ucr$cientifico_mep)
# ucr$humanista_mep <- factor(ucr$humanista_mep)
# ucr$indigena_mep <- factor(ucr$indigena_mep)
# ucr$territorio_indig_mep <- factor(ucr$territorio_indig_mep)
# ucr$lengua_indig_mep <- factor(ucr$lengua_indig_mep)
# ucr$bilingue_mep <- factor(ucr$bilingue_mep)
# ucr$bach_internacional_mep <- factor(ucr$bach_internacional_mep)
# ucr$admitido <- factor(ucr$admitido)
# levels(ucr$admitido) <- c("no admitido","admitido")
ucr$admitido <- factor(ucr$admitido)
levels(ucr$admitido) <- c(1,0)
contrasts(ucr$admitido)
ucr <- ucr[,-c(1,21:22)]
str(ucr)
library(class)
library(ISLR)
library(caret)
n=nrow(ucr)
s=sample(1:n,round(0.8*n))
train=ucr[s,]
test=ucr[-s,]
# ucr$liceo_rural_mep <- factor(ucr$liceo_rural_mep)
# ucr$cientifico_mep <- factor(ucr$cientifico_mep)
# ucr$humanista_mep <- factor(ucr$humanista_mep)
# ucr$indigena_mep <- factor(ucr$indigena_mep)
# ucr$territorio_indig_mep <- factor(ucr$territorio_indig_mep)
# ucr$lengua_indig_mep <- factor(ucr$lengua_indig_mep)
# ucr$bilingue_mep <- factor(ucr$bilingue_mep)
# ucr$bach_internacional_mep <- factor(ucr$bach_internacional_mep)
# ucr$admitido <- factor(ucr$admitido)
# levels(ucr$admitido) <- c("no admitido","admitido")
str(ucr)
mod_knnn <- knn3(admitido~.,data = train, k=5)
mod_knnn
pred_knn <- predict(mod_knnn, newdata = test, type = "class")
table(test$admitido,pred_knn)
rstudioapi::addTheme("https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme", apply = TRUE)
ucr <- read.csv("ucr.csv")
ucr$tipo_horario <- as.numeric(ucr$tipo_horario)
ucr$in0vacion_mep <- as.numeric(ucr$in0vacion_mep)
ucr$v_agregado_mep <- as.numeric(ucr$v_agregado_mep)
ucr$ambiental_mep <- as.numeric(ucr$ambiental_mep)
ucr$o_tecnolog_mep <- as.numeric(ucr$o_tecnolog_mep)
ucr$modeloiiicicloydiversificado_mep <- as.numeric(ucr$modeloiiicicloydiversificado_mep)
ucr$deportivo_mep <- as.numeric(ucr$deportivo_mep)
ucr$telesecundaria_mep <- as.numeric(ucr$telesecundaria_mep)
ucr$liceo_rural_mep <- as.numeric(ucr$liceo_rural_mep)
ucr$cientifico_mep <- as.numeric(ucr$cientifico_mep)
ucr$humanista_mep <- as.numeric(ucr$humanista_mep)
ucr$indigena_mep <- as.numeric(ucr$indigena_mep)
ucr$bilingue_mep <- as.numeric(ucr$bilingue_mep)
ucr$bach_internacional_mep <- as.numeric(ucr$bach_internacional_mep)
ucr$admitido <- factor(ucr$admitido)
levels(ucr$admitido) <- c("admitido","no admitido")
df <- ucr[,c(6,10:20,23:25)]
str(df)
# creo la base de train y test
RNGkind(sample.kind = "Rounding")
set.seed(10)
n=nrow(df)
s=sample(1:n,round(0.8*n))
# creo test y train con las variables binarias de interes
train=df[s,]
test=df[-s,]
base_knn <- rbind(train,test)
dist_dice <- as.matrix(dissimilarity(as.matrix(base_knn[,-15]),method = "dice"))[26071:32587,1:26070]# saco la matriz de distancias sin la variable respuesta y tomo los 6517 valores de los datos de validacion
library(readxl)
library(tidyverse)
library(cluster)
library(vegan)
suppressMessages(library(caret))
suppressMessages(library(DT))
suppressMessages(library(ROCR))
suppressMessages(library(class))
suppressMessages(library(kknn))
suppressMessages(library(e1071))
suppressMessages(library(plotly))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
library(modeest)
library(ISLR)
library(caret)
library(class)
install.packages("arules")
install.packages("modeest")
library(readxl)
library(tidyverse)
library(cluster)
library(vegan)
suppressMessages(library(caret))
suppressMessages(library(DT))
suppressMessages(library(ROCR))
suppressMessages(library(class))
suppressMessages(library(kknn))
suppressMessages(library(e1071))
suppressMessages(library(plotly))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
library(modeest)
library(ISLR)
library(caret)
library(class)
library(arules)
dist_dice <- as.matrix(dissimilarity(as.matrix(base_knn[,-15]),method = "dice"))[26071:32587,1:26070]# saco la matriz de distancias sin la variable respuesta y tomo los 6517 valores de los datos de validacion
dist_dice <- as.matrix(dissimilarity(as.matrix(base_knn[,-15]),method = "dice"))[26071:32587,1:26070]# saco la matriz de distancias sin la variable respuesta y tomo los 6517 valores de los datos de validacion
x <- c(1,1,1,1,1,2,2,2)
y <- c(1,2,2,2,1,1,1,2)
z <- c(1,2,1,2,2,2,1,1)
g <- data.frame(x,y,z)
dist <- vegdist(g,method = "jaccard")
dist
x <- c(1,1,1,1,1,0,0,0)
y <- c(1,0,0,0,1,1,1,0)
z <- c(1,0,1,0,0,0,1,1)
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
diss
plot(hclust(diss,method = "ward.D"))
x <- c(1,1,1,1,1,0,0,0)
y <- c(1,0,0,0,1,1,1,0)
z <- c(1,0,1,0,0,0,1,1)
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
diss
as.matrix(diss)
View(ucr)
ucr <- read.csv("ucr.csv")
ucr$tipo_horario <- as.numeric(ucr$tipo_horario)
ucr$in0vacion_mep <- as.numeric(ucr$in0vacion_mep)
ucr$v_agregado_mep <- as.numeric(ucr$v_agregado_mep)
ucr$ambiental_mep <- as.numeric(ucr$ambiental_mep)
ucr$o_tecnolog_mep <- as.numeric(ucr$o_tecnolog_mep)
ucr$modeloiiicicloydiversificado_mep <- as.numeric(ucr$modeloiiicicloydiversificado_mep)
ucr$deportivo_mep <- as.numeric(ucr$deportivo_mep)
ucr$telesecundaria_mep <- as.numeric(ucr$telesecundaria_mep)
ucr$liceo_rural_mep <- as.numeric(ucr$liceo_rural_mep)
ucr$cientifico_mep <- as.numeric(ucr$cientifico_mep)
ucr$humanista_mep <- as.numeric(ucr$humanista_mep)
ucr$indigena_mep <- as.numeric(ucr$indigena_mep)
ucr$bilingue_mep <- as.numeric(ucr$bilingue_mep)
ucr$bach_internacional_mep <- as.numeric(ucr$bach_internacional_mep)
ucr$admitido <- factor(ucr$admitido)
levels(ucr$admitido) <- c("admitido","no admitido")
df <- ucr[,c(6,10:20,23:25)]
str(df)
x <- df$humanista_mep
y <- df$tipo_horario
z <- df$indigena_mep
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
ucr <- read.csv("ucr.csv")
ucr$tipo_horario <- as.numeric(ucr$tipo_horario)
ucr$in0vacion_mep <- as.numeric(ucr$in0vacion_mep)
ucr$v_agregado_mep <- as.numeric(ucr$v_agregado_mep)
ucr$ambiental_mep <- as.numeric(ucr$ambiental_mep)
ucr$o_tecnolog_mep <- as.numeric(ucr$o_tecnolog_mep)
ucr$modeloiiicicloydiversificado_mep <- as.numeric(ucr$modeloiiicicloydiversificado_mep)
ucr$deportivo_mep <- as.numeric(ucr$deportivo_mep)
ucr$telesecundaria_mep <- as.numeric(ucr$telesecundaria_mep)
ucr$liceo_rural_mep <- as.numeric(ucr$liceo_rural_mep)
ucr$cientifico_mep <- as.numeric(ucr$cientifico_mep)
ucr$humanista_mep <- as.numeric(ucr$humanista_mep)
ucr$indigena_mep <- as.numeric(ucr$indigena_mep)
ucr$bilingue_mep <- as.numeric(ucr$bilingue_mep)
ucr$bach_internacional_mep <- as.numeric(ucr$bach_internacional_mep)
ucr$admitido <- factor(ucr$admitido)
levels(ucr$admitido) <- c("admitido","no admitido")
df <- ucr[,c(6,10:20,23:25)]
str(df)
gc()
x <- df$humanista_mep
y <- df$tipo_horario
z <- df$indigena_mep
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
as.matrix(diss)
gc()
gc()
gc()
x <- c(1,1,1,1,1,0,0,0)
y <- c(1,0,0,0,1,1,1,0)
z <- c(1,0,1,0,0,0,1,1)
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
``{r}
library(readxl)
library(tidyverse)
library(cluster)
library(vegan)
suppressMessages(library(caret))
suppressMessages(library(DT))
suppressMessages(library(ROCR))
suppressMessages(library(class))
suppressMessages(library(kknn))
suppressMessages(library(e1071))
suppressMessages(library(plotly))
suppressMessages(library(adabag))
suppressMessages(library(randomForest))
library(modeest)
library(ISLR)
library(caret)
library(class)
library(arules)
x <- c(1,1,1,1,1,0,0,0)
y <- c(1,0,0,0,1,1,1,0)
z <- c(1,0,1,0,0,0,1,1)
g <- data.frame(x,y,z)
str(g)
diss <- dissimilarity(as.matrix(g),method = "dice")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
plot(hclust(1-diss,method = "ward.D"))
x1 <- c(1,1,1,1,1,0)
x2 <- c(1,1,0,0,0,0)
x3 <- c(0,1,0,0,0,0)
x4 <- c(0,0,1,1,0,0)
x5 <- c(1,0,0,0,1,1)
x5 <- c(1,1,1,1,1,0)
g <- data.frame(x1,x2,x3,x4,x5,x6)
x6 <- c(1,1,1,1,1,0)
g <- data.frame(x1,x2,x3,x4,x5,x6)
str(g)
g
rownames(g) <- c("leon","jirafa","vaca","oveja","gato","hombre")
g
diss <- dissimilarity(as.matrix(g),method = "dice")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
plot(hclust(1-diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "jaccard")
diss
diss <- dissimilarity(as.matrix(g),method = "matching")
diss
plot(hclust(diss,method = "ward.D"))
plot(hclust(1-diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "matching")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "dice")
diss
plot(hclust(diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "jaccard")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "cosine")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
diss <- dissimilarity(as.matrix(g),method = "affinity")
diss
1-diss
plot(hclust(diss,method = "ward.D"))
